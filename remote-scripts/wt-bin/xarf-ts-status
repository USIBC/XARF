#!/bin/bash
# D. Racine 20150109
#
# s/Nbc/Ibc/g to accommodate a class name change in webTA v4.1.29
# D. Racine 20151117
#
# Maintain sane output on stdout when rungroovy fails. D. Racine 20160107

. $HOME/WT-env
PRG=$(basename $0)

STATES="\
(Saved|Pending Attestation|Validat(ed by (Employee|Timekeeper)|ion Overridden)\
|Certified|(P|Pre-p)rocessed|Corrected)"


usage() { printf "
  Usage: $PRG [year]-payperiod id [...]\n
  The current calendar year is used if year is omitted. The '-' character
  delimiting year and payperiod must be present regardless of whether a year
  is specified. Year must be a 4 digit number when specified.\n\n"; exit 1; }

format() {
  local NAME="$([[ "$1" =~ $STATES ]] && echo $BASH_REMATCH)"
  local COUNT="$([[ "$1" =~ [0-9][0-9]* ]] && echo $BASH_REMATCH)"
  [ "x$NAME" != "x" ] && printf ' ("%s" %d)' "$NAME" $COUNT; } 


[[ ! $1 =~ ^(|[0-9]{4})-[0-9]{1,2} || ! $2 =~ ^[0-9]{3,4}$ ]] && usage

PP=$(cut -d- -f2 <<<"$1")
YR=$(cut -d- -f1 <<<"$1")
[ "x$YR" == "x" ] && YR=$(date '+%Y')
shift && IDS="$*"

OWD=$PWD
TD=/tmp/$PRG-$$-$(date '+%Y%m%d.%H%M%S')

GS="\
  int ppYear = $YR; int ppNum = $PP;
  import static com.kronos.db.DB.*; import static webta.db.DB.*;
  import java.util.TreeMap; import webta.model.timesheets.TimesheetStatus;
  import webta.model.timesheets.TimesheetType;
  import com.kronos.db.DB.Tuple2; import com.kronos.db.Query;
  import com.kronos.federal.nbc.payroll.IbcPayrollProvider;
  def pp = PayPeriodService.getPayPeriod(IbcPayrollProvider.class, ppYear, ppNum);
  Query<Tuple2<TimesheetStatus,Long>>
    q = select(ta_timesheet.status(), count(ta_timesheet.id()))
        .where(ta_timesheet.timesheetType().in(TimesheetType.STANDARD_AND_CORRECTION))
        .where(ta_timesheet.payPeriod().eq(pp))
        .groupBy(ta_timesheet.ts_status_code());
  TreeMap<TimesheetStatus, Long> results = new TreeMap<TimesheetStatus, Long>();
  for(Tuple2<TimesheetStatus,Long> t: q.list()){results.put(t.t1, t.t2);}
  for(TimesheetStatus s : results.keySet())
    {out.println( s.getMessage() + ' ' + results.get(s));}
  return \"done\";"


mkdir $TD && cd $TD || exit 1

RE="$(rungroovy - $IDS <<<"$GS" 2>&1)"

[ "x$RE" != "x" ] && echo "$RE" >&2

echo -n '('

for i in $IDS; do
  printf '(|%s|' $i
  while read L; do
    format "$L"
    done <<<"$(egrep -o "$STATES [0-9][0-9]*" $i---out?.html)" || echo -n ' ("Saved" "no data")'
  echo -n ') '; done

echo ')' && cd $OWD && rm -rf $TD
