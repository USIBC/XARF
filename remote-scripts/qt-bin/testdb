#!/bin/bash
# Uses tnsping, a sqlplus login, and a simple query to test the specified QT db schema.
# Dependencies:
#   * sqlplus & tnsping
#   * getcxstring
# D. Racine 20050923

[ ! "$1" ] && { printf "
  Tests the DB schemas of the specified QT app instances.
  Uses 'getcxstring' to identify target schemas.\n
  Usage: testdb QT_app_instance_ID [ ... ]\n\n"; exit 1; }

. $HOME/QT-env

output() {
echo "tnsping_${DB}: ${TNSPING}; ${SCHEMA}@${DB}_query_result: ${QRES}"; }


TEST_QRY="select propname from properties where propname like 'cfg\$COST%';"

SUCCESS_PATTERN="COST_COMPONENTS_FOR_ENTRY"


XS=0  #gets set to 1 if any test fails

while [ "$1" ]; do
  CXSTRING="`getcxstring $1`" && shift || { shift; continue; }
  DB="$(cut -d@ -f2 <<<"$CXSTRING")"
  SCHEMA="$(cut -d/ -f1 <<<"$CXSTRING")"
  TNSPING="$(tnsping $DB |grep -om1 ^OK)"
  tnsping $DB >/dev/null 2>&1 && TNSPING=OK || { TNSPING="failed!"; QRES="NA"; output; XS=1; continue; }
  QRES="$(sqlplus -S -L $CXSTRING <<<"$TEST_QRY" |grep -om1 "$SUCCESS_PATTERN")"
  [ "x$QRES" != "x" ] && QRES="OK" || { QRES="failed!"; XS=1; }
  output; done; exit $XS
